### Everything first goes through this stream stanza. Map matches subdomain to port to route to.
### If we no map found, we route to default 8443. This directs back to HTTP stanza as normal.
stream {

    log_format stream_routing '$remote_addr [$time_local] '
                              'with SNI name "$ssl_preread_server_name" '
                              'proxying to "$instanceport" '
                              '$protocol $status $bytes_sent $bytes_received '
                              '$session_time';

    # Maps input string to output variable. Regex works.
    # Ports used are purely random. Feel free to change.
    map $ssl_preread_server_name $instanceport {
        # Christian Garcia's KGService.
        ~kg.develop.tapis.io     5503;
        # Else default to 8443 (listened to by http stanza).
        default                  8443;
    }

    # Christian Garcia's KGService. Route to service nginx pod.
    server {
        # Success to Neo4j 
        listen                 5503 ssl;
        ssl_preread            off;
        proxy_pass             neo:7687;
        #ssl_certificate /tmp/ssl/tls.crt;
        #ssl_certificate_key /tmp/ssl/tls.key;
    }

    # Listen for all incoming requests. Preread server name (for mapping). Then pass. 
    server {
        listen                  443;
        ssl_preread             on;
        access_log /dev/stdout stream_routing;
        proxy_connect_timeout   20s;  # max time to connect to pserver
        proxy_timeout           30s;  # max time between successive reads or writes
        proxy_pass              127.0.0.1:$instanceport;
    }
}
