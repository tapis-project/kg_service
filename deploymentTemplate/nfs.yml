apiVersion: apps/v1
kind: Deployment
metadata:
  name: pods-nfs
spec:
  selector:
    matchLabels:
      app: pods-nfs
  template:
    metadata:
      labels:
        app: pods-nfs
    spec:
      containers:
      - name: pods-nfs
        image: itsthenetwork/nfs-server-alpine:12
        securityContext:
          privileged: true # required by image
        env:
        - name: SHARED_DIRECTORY
          value: "/podsnfs"
        ports:
        - name: pods-nfs
          containerPort: 2049
        volumeMounts:
        - name: pods-nfs-vol
          mountPath: "/podsnfs"
        - name: pods-nfs-config
          mountPath: "/etc/exports"
          subPath: "exports"
      volumes:
      - name: pods-nfs-vol
        persistentVolumeClaim:
          claimName: pods-nfs-vol
      - name: pods-nfs-config
        configMap:
          name: pods-nfs-config
          items:
          - key: exports
            path: exports

# Config overwrites /etc/exports which is was nfsd is looking for.
# all_squash makes it so all clients are squashed to the same user, in this case 4872:4872.
# Meaning all clients, no matter uid, write as 4872(tapis uid) regardless of their container id.
#https://www.reddit.com/r/kubernetes/comments/f0cn2z/nfs_service_by_dns_name/
#https://serverfault.com/questions/1089557/what-does-the-no-all-squash-option-do-in-nfs-exports
#https://github.com/kubernetes/minikube/issues/3417
--- 
apiVersion: v1
kind: ConfigMap
metadata:
  name: pods-nfs-config
data:
  exports: |
    /podsnfs *(rw,fsid=0,async,no_subtree_check,anonuid=0,anongid=0,all_squash,insecure)

# This only works if user is root on health-central and api otherwise it can't edit anything.    
#/podsnfs *(rw,fsid=0,async,no_subtree_check,insecure,no_root_squash)
# This works when user is `tapis` on health-central and api.
#/podsnfs *(rw,fsid=0,async,no_subtree_check,anonuid=0,anongid=0,all_squash,insecure)