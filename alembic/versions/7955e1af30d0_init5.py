"""init5

Revision ID: 7955e1af30d0
Revises: e9df9a15e8e1
Create Date: 2023-04-14 05:17:08.933762

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel              ##### Required when using sqlmodel and not use sqlalchemy
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7955e1af30d0'
down_revision = 'e9df9a15e8e1'
branch_labels = None
depends_on = None


def upgrade(engine_name):
    globals()["upgrade_alltenants"]()


def downgrade(engine_name):
    globals()["downgrade_alltenants"]()




def upgrade_alltenants():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('snapshot',
    sa.Column('permissions', postgresql.ARRAY(sa.String(), dimensions=1), nullable=True),
    sa.Column('snapshot_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('source_volume_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('source_volume_path', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('destination_path', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('size_limit', sa.Integer(), nullable=True),
    sa.Column('cron', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('retention_policy', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('creation_ts', sa.DateTime(), nullable=True),
    sa.Column('update_ts', sa.DateTime(), nullable=True),
    sa.Column('tenant_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('site_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('k8_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('logs', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('snapshot_id')
    )
    op.create_table('template',
    sa.Column('object_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('tenants', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('creation_time', sa.DateTime(), nullable=False),
    sa.Column('added_by', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('object_name')
    )
    op.create_table('volume',
    sa.Column('permissions', postgresql.ARRAY(sa.String(), dimensions=1), nullable=True),
    sa.Column('volume_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('size_limit', sa.Integer(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('creation_ts', sa.DateTime(), nullable=True),
    sa.Column('update_ts', sa.DateTime(), nullable=True),
    sa.Column('tenant_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('site_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('k8_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('logs', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.PrimaryKeyConstraint('volume_id')
    )
    op.add_column('pod', sa.Column('volume_mounts', sa.JSON(), nullable=True))
    op.drop_column('pod', 'persistent_volume')
    # ### end Alembic commands ###


def downgrade_alltenants():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('pod', sa.Column('persistent_volume', postgresql.JSON(astext_type=sa.Text()), server_default=sa.text("'{}'::json"), autoincrement=False, nullable=True))
    op.drop_column('pod', 'volume_mounts')
    op.drop_table('volume')
    op.drop_table('template')
    op.drop_table('snapshot')
    # ### end Alembic commands ###
